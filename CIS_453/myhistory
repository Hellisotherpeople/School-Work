history()
summary(mydata)
summary(inspect(mydata))
summary(rules)
support(rules) 
support(mydata)
crossTable(mydata, measure='lift',sort=T)[1:10,1:10]
inspect(sort(rules, by = 'lift'[1:20])
;
inspect(sort(rules, by = 'lift')[1:20])
inspect(sort(rules, by = 'support')[1:20])
inspect(sort(rules, by = 'lift')[1:20])
summary(rules)
summary(mydata)
inspect(sort(subset(rules,
                    subset=rhs %in% 'bottled beer' & confidence > .7),
                    by = 'lift',
                    decreasing = T)
;
inspect(sort(subset(rules, subset=rhs %in% 'BLucian'), by = 'lift',)))
inspect(sort(subset(rules, subset=rhs %in% 'BLucian'), by = 'lift')))
inspect(sort(subset(rules, subset=rhs %in% 'BLucian'), by = 'lift'))
inspect(sort(subset(rules, subset=rhs %in% 'BLucian'), by = 'lift')[1:20])
inspect(sort(subset(rules, subset=rhs %in% 'BLee'Sin'), by = 'lift')[1:20])
inspect(sort(subset(rules, subset=rhs %in% 'BLee Sin'), by = 'lift')[1:20])
inspect(sort(subset(rules, subset=rhs %in% 'Tristana'), by = 'lift')[1:20])
inspect(sort(subset(rules, subset=rhs %in% 'BTristana'), by = 'lift')[1:20])
inspect(sort(subset(rules, subset=rhs %in% 'BTristana'), by = 'lift'))
inspect(sort(subset(rules, subset=rhs %in% 'RTristana'), by = 'lift'))
inspect(sort(subset(rules, subset=rhs %in% 'RZed'), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% 'RZed'), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% 'RZed' & 'RKarma'), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% 'RZed' | 'RKarma'), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% 'RZed', 'RKarma'), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% 'RZed', 'RLucian'), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% 'RZed' 'RLucian'), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% ['RZed', 'RKarma']), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% 'RZed', 'RKarma'), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% ('RZed', 'RKarma')), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% ('RZed' 'RKarma')), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% ['RZed' 'RKarma']), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% c('RZed' 'RKarma'), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% , by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% 'RZed', by = 'lift'))
;
inspect(sort(subset(rules, subset=lhs %in% 'RZed'), by = 'lift'))
champlist <- c('RZed', 'RKarma')
inspect(sort(subset(rules, subset=lhs %in% champlist), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% champlist[1:2]), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% champlist[1&2]), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% champlist[1&&2]), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% 'RSyndra'), by = 'lift'))
champlist[1:2]
champlist[1&&2]
inspect(sort(subset(rules, subset=lhs %in% 'RSyndra'), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %in% c('RSyndra', 'RZed'), by = 'lift'))
;
inspect(sort(subset(rules, subset=lhs %in% c('RSyndra', 'RZed')), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %ain% c('RSyndra', 'RZed')), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %ain% c('RLucian', 'RKarma')), by = 'lift'))
clear
inspect(sort(subset(rules, subset=lhs %ain% c('RLucian', 'RKarma')), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %ain% c('BLucian', 'BKarma')), by = 'lift'))
lkrules <- sort(subset(rules, subset=lhs %ain% c('BLucian', 'BKarma')), by = 'lift'))
lkrules <- sort(subset(rules, subset=lhs %ain% c('BLucian', 'BKarma')), by = 'lift')
inspect(lkrules)
plot(lkrules)
library(arulesViz)
plot(lkrules)
plot(lkrules, interactive = 'T')
plot(lkrules, interactive = T)
plot(lkrules, method = 'graph' interactive = T)
plot(lkrules, method = 'graph', interactive = T)
plot(lkrules, method = 'graph', interactive = T, shading = NA)
plot(lkrules[1:5], method = 'graph', interactive = T, shading = NA)
plot(lkrules[1:5], measure=c("support", "lift"), shading = "confidence")
plot(lkrules, measure=c("support", "lift"), shading = "confidence")
plot(rules, measure=c("support", "lift"), shading = "confidence")
plot(rules, measure=c("confidence", "lift"), shading = "support")
plot(rules)
plot(lkrules, measure=c("confidence", "lift"), shading = "support")
plot(lkrules, method="graph")
plot(lkrules[20], method="graph")
plot(lkrules[1:20], method="graph")
plot(lkrules[1:20], method="graph")
plot(lkrules, method="graph", control=list(type="itemsets"))
plot(lkrules[1:20], method="graph", control=list(type="itemsets"))
plot(lkrules[1:20], method="graph", control=list(type="itemsets"))
plot(lkrules[1:20], method="paracoord")
saveAsGraph(head(sort(rules, by="lift"),1000), file="rules.graphml")
plot(lkrules, method="paracoord", control=list(reorder=TRUE))
plot(lkrules[1:10], method="paracoord", control=list(reorder=TRUE))
inspect(lkrules[1:10])
plot(rules, method="grouped")
plot(lkrules, method="grouped")
plot(rules, method="grouped")
plot(sort(rules, by"lift"), method="grouped")
plot(sort(rules, by="lift"), method="grouped")
plot(rules, method="grouped", control=list(k=50))
plot(sort(rules, by="lift"), method="grouped")
plot(lkrules, method="grouped")
plot(head(sort(rules, by="lift", 10), method="graph")
;
plot(head(sort(rules, by="lift", 10), method="graph"))
plot(head(sort(rules, by="lift"), 10), method="graph")
plot(head(sort(rules, by="lift"), 20), method="graph")
plot(head(sort(rules, by="lift"), 20), method="graph", control=list(type="itemsets"))
plot(head(sort(rules, by="lift"), 10), method="graph", control=list(type="itemsets"))
plot(head(sort(rules, by="support"), 10), method="graph", control=list(type="itemsets"))
plot(head(sort(rules, by="support"), 100), method="graph", control=list(type="itemsets"))
plot(head(sort(rules, by="confidence"), 10), method="graph", control=list(type="itemsets"))
plot(rules, shading="order", control=list(main = "Two-key plot"))
inspect(sort(subset(rules, subset=lhs %ain% c('BLucian', 'BKarma')), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %ain% c('BLucian', 'BRenekton')), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %ain% c('BTristana', 'BRenekton')), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %ain% BTristana, by = 'lift'))
;
inspect(sort(subset(rules, subset=lhs %ain% BTristana), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %ain% 'BTristana'), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %ain% 'RTristana'), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %ain% 'RWarwick'), by = 'lift'))
inspect(sort(subset(rules, subset=lhs %ain% 'RWarwick')[1:10], by = 'lift'))
plot(rules, shading="order", method = "mosaic"))
plot(rules, shading="order", method = "mosaic")
plot(rules, shading="order", method = "matrix")
plot(lkrules, shading="order", method = "matrix")
plot(lkrules[1:10], shading="order", method = "matrix")
plot(lkrules, shading="order", method = "matrix")
plot(lkrules, shading="order", method = "matrix3d")
plot(lkrules, shading="order", method = "matrix3D")
plot(lkrules, shading="order", method = "iplots")
library(iplots)
plot(lkrules, shading="order", method = "matrix3D")
plot(rules, shading="order", method = "matrix3D")
plot(rules, shading="order", method = "matrix3D", reorder = "TRUE")
plot(rules, shading="order", method = "matrix3D", reorder = "TRUE", orderBy = "lift")
plot(rules, shading="order", method = "matrix3D", measure="lift")
plot(lkrules, shading="order", method = "matrix3D", measure="lift")
plot(rules, shading="order", method = "matrix3D", measure="lift")
plot(rules, shading="order", method = "matrix3D", measure="support")
plot(rules, shading="order", method = "matrix3D", measure="confidence")
plot(rules, shading="order", method = "matrix3D", measure="support")
plot(rules, shading="order", method = "matrix3D", measure="lift")
plot(lkrules, shading="order", method = "matrix3D", measure="lift")
plot(rules, shading="order", method = "matrix3D", measure="lift", )
plot(rules, shading="order", method = "matrix3D", measure="lift", reorder = "TRUE")
plot(rules, shading="order", method = "matrix3D", measure="lift", reorder = "FALSE")
plot(rules, shading="order", method = "matrix3D", measure="lift", control=list(reorder = "TRUE"))
plot(rules, shading="order", method = "matrix3D", measure="lift", control=list(reorder = "TRUE"))l
plot(rules, shading="order", method = "matrix3D", measure="lift")
save.image("mydata.RData")
save.history(file="myhistory")
savehistory(file="myhistory")
